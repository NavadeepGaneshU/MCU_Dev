#include <msp430.h> 

unsigned int ADC_Value;

int main(void)
{
	WDTCTL = WDTPW | WDTHOLD;	// stop watchdog timer
	
	P1DIR |= BIT0;              //set P1.0 LED1 to output
	P1DIR |= BIT1;              //set P1.1 LED2 to output

	P1SEL1 |= BIT2;              //choose analog function for P1.2
	P1SEL0 |= BIT2;              //11 = Analog

	PM5CTL0 &= ~LOCKLPM5;

	//Configure ADC
	ADCCTL0 &= ~ADCSHT;         //set conv clock cycles = 16
	ADCCTL0 |= ADCSHT_2;
	ADCCTL0 |= ADCON;           //turn ON ADC

	ADCCTL1 |= ADCSSEL_2;        //chooses SMCLK
	ADCCTL1 |= ADCSHP;           //sample signal source =  sampling timer

	ADCCTL2 &= ~ADCRES;          //clear resolution bit
	ADCCTL2 |= ADCRES_2;         //12 bit resolution

	ADCMCTL0 |= ADCINCH_2;      //ADC input = A2(P1.2)

	while(1)
	{
	    ADCCTL0 |= ADCENC | ADCSC; //enable and start conversion for ADC

	    while((ADCIFG & ADCIFG0)==0);

	    ADC_Value = ADCMEM0;

	    if (ADC_Value > 3613)
	    {
	        P1OUT |= BIT0;      //LED1 ON
	        P1OUT &= ~BIT1;      //LED2 OFF
	    }
	    else
	    {
            P1OUT |= BIT1;      //LED2 ON
            P1OUT &= ~BIT0;      //LED1 OFF
	    }
	}

	return 0;
}
